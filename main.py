import airfoil_Builder
import matplotlib.pyplot as plt
# from SCRIPTS.Model1_ANN import train_and_save_model

# # Now you can use train_and_save_model in your main.py
# train_and_save_model(
#     'model1_ANN.keras',
#     '/Users/ak/PycharmProjects/PARSEC_OPT/RESOURCES/fitness/NACA6408.csv',
#     ['Cl', 'Cd', 'Cm'],
#     ['yU_1', 'yU_2','yU_3', 'yU_4','yU_5', 'yU_6','yU_7', 'yU_8','yU_9', 'yU_10','yL_1', 'yL_2','yL_3', 'yL_4','yL_5', 'yL_6','yL_7', 'yL_8','yL_9', 'yL_10', 'ReynoldsNumber','MachNumber','alpha'],
#     'This is Model 1.'
# )

rLE = 0.0147
Xup = 0.3015
Yup = 0.0599
YXXup = -0.4360
Xlow = 0.2996
Ylow = -0.06
YXXlow = 0.4406
yTE = 0
deltaYTE = 0
alphaTE = 0
betaTE = 14.67

# genes = [[0.022028398172698832, 0.014909972469847377, 0.19131302277026258, -0.03145004697386025, 0.348600346393238, -0.11270809714274087, 0.019478974011888583, -0.09137591307596914, 0.001051826118050081, 358.57716542057204, 243.7584605017981], [0.009184781744351635, 0.014909972469847377, 0.1668981036767055, -0.05174832623838861, 0.2652554774311876, -0.11270809714274087, -0.08082863268240983, 0.046632160153082886, 0.001051826118050081, 358.57716542057204, 160.91629829169645], [0.014071653932302846, 0.014909972469847377, 0.1668981036767055, 0.012927437061695121, 0.19069779518561036, -0.1934743008979389, -0.08082863268240983, 0.06570611638799778, 0.001051826118050081, 268.5672836290555, 160.91629829169645], [0.014071653932302846, 0.014909972469847377, 0.1668981036767055, 0.012927437061695121, 0.19069779518561036, -0.1934743008979389, -0.08082863268240983, -0.09137591307596914, 0.001051826118050081, 268.5672836290555, 282.5659800093517], [0.014071653932302846, 0.014909972469847377, 0.1668981036767055, 0.07129968424638725, 0.4134505039093871, 0.137912988943254, -0.08082863268240983, -0.0527572320351819, 0.001051826118050081, 358.57716542057204, 160.91629829169645]]
genes = [[0.005163101274420603, 0.0009747059891441756, 0.1995011815776057, 0.047496511151673776, 0.0032636500982662353, 0.19701019633877842, 0.07094824289642554, -0.13630897657369517, 0.04112768234350082, 27.01002761528567, 5.006740207363545], [0.005163101274420603, 0.0009747059891441756, 0.1995011815776057, 0.09968716983137146, 0.0032636500982662353, 0.19701019633877842, 0.03953179327029874, 0.1407533154238348, 0.06066388048068651, 73.98598303974532, 312.9439691279888], [0.005163101274420603, 0.0009747059891441756, 0.1995011815776057, 0.08652462783383855, 0.0032636500982662353, 0.19701019633877842, 0.09788130756056745, -0.07777572504841324, 0.06066388048068651, 216.76792073405645, 297.43111236716777], [0.005163101274420603, 0.0009747059891441756, 0.1995011815776057, 0.06689196989197771, 0.0032636500982662353, 0.19701019633877842, 0.019427512830846233, -0.1621880273665126, 0.07104907787312902, 24.246545753690327, 337.85583831774676], [0.005163101274420603, 0.0009747059891441756, 0.1995011815776057, 0.06689196989197771, 0.0032636500982662353, 0.19701019633877842, 0.019427512830846233, -0.1621880273665126, 0.04112768234350082, 24.246545753690327, 297.43111236716777]]

# airfoil = airfoil_Builder.Airfoil_Builder(rLE, Xup,Yup,YXXup,Xlow,Ylow,YXXlow,yTE,deltaYTE,alphaTE,betaTE)
# temp = [0.014071653932302846, 0.014909972469847377, 0.1668981036767055, 0.07129968424638725, 0.4134505039093871, 0.137912988943254, -0.08082863268240983, -0.0527572320351819, 0.001051826118050081, 358.57716542057204, 160.91629829169645]
airfoil = airfoil_Builder.Airfoil_Builder(*genes[0])


airfoil.build()
xcoor = airfoil.XCoordinates
yCoorUpper = airfoil.YCoordinatesUpper
yCoorLower = airfoil.YCoordinatesLower

# Create a scatter plot of the points
plt.scatter(xcoor, yCoorUpper, label="Points", color="blue", marker="o")

# Add labels and title
plt.xlabel("X-Axis")
plt.ylabel("Y-Axis")
plt.title("Scatter Plot of Points")

# Add a legend (if needed)
plt.legend()

# Show the plot
plt.show()
print(xcoor)
print(yCoorUpper)
print(yCoorLower)

print(len(yCoorUpper))
print(len(yCoorLower))




# [67128750.0, 67128750.0, 67128750.0, 67128744.0, 67128744.0, 67128744.0, 67128744.0, 67128744.0, 67128744.0, 67128744.0, 67128744.0, 67128744.0, 67128744.0, 67128744.0, 67128744.0, 67128744.0, 67128744.0, 67128744.0, 67128744.0, 67128740.0, 67128740.0, 67128740.0, 67128740.0, 67128740.0, 67128740.0, 67128160.0, 67128150.0, 67128150.0, 67128140.0, 67128040.0, 67128040.0, 67128040.0, 67128040.0, 67128040.0, 67128040.0, 67128040.0, 67128040.0, 67128040.0, 67128040.0, 67128040.0, 67128040.0, 67128040.0, 67128040.0, 67128040.0, 67128040.0, 67128040.0, 67128040.0, 67128040.0, 67128040.0, 67128040.0, 67128040.0, 67128040.0, 67128040.0, 67128040.0, 67128040.0, 67128040.0, 67128040.0, 67128040.0, 67128040.0, 67128040.0, 67128040.0, 67128040.0, 67128040.0, 67128030.0, 67128030.0, 67128030.0, 67128030.0, 67128030.0, 67128030.0, 67128030.0, 67128030.0, 67128030.0, 67128030.0, 67128030.0, 67128030.0, 67128030.0, 67128030.0, 67128030.0, 67128030.0, 67128030.0, 67128030.0, 67128030.0, 67128030.0, 67128030.0, 67128030.0, 67128030.0, 67128030.0, 67128030.0, 67128030.0, 67128030.0, 67128030.0, 67128030.0, 67128030.0, 67128030.0, 67128030.0, 67128030.0, 67128030.0, 67128030.0, 67128030.0, 67128030.0]
# [0.005163101274420603, 0.0009747059891441756, 0.1995011815776057, 0.047496511151673776, 0.0032636500982662353]
# [[0.005163101274420603, 0.0009747059891441756, 0.1995011815776057, 0.047496511151673776, 0.0032636500982662353, 0.19701019633877842, 0.07094824289642554, -0.13630897657369517, 0.04112768234350082, 27.01002761528567, 5.006740207363545], [0.005163101274420603, 0.0009747059891441756, 0.1995011815776057, 0.09968716983137146, 0.0032636500982662353, 0.19701019633877842, 0.03953179327029874, 0.1407533154238348, 0.06066388048068651, 73.98598303974532, 312.9439691279888], [0.005163101274420603, 0.0009747059891441756, 0.1995011815776057, 0.08652462783383855, 0.0032636500982662353, 0.19701019633877842, 0.09788130756056745, -0.07777572504841324, 0.06066388048068651, 216.76792073405645, 297.43111236716777], [0.005163101274420603, 0.0009747059891441756, 0.1995011815776057, 0.06689196989197771, 0.0032636500982662353, 0.19701019633877842, 0.019427512830846233, -0.1621880273665126, 0.07104907787312902, 24.246545753690327, 337.85583831774676], [0.005163101274420603, 0.0009747059891441756, 0.1995011815776057, 0.06689196989197771, 0.0032636500982662353, 0.19701019633877842, 0.019427512830846233, -0.1621880273665126, 0.04112768234350082, 24.246545753690327, 297.43111236716777]]